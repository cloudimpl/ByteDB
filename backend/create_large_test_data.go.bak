package main

import (
	"fmt"
	"log"
	"os"

	"github.com/parquet-go/parquet-go"
)

type LargeEmployee struct {
	ID          int64  `parquet:"id"`
	Name        string `parquet:"name"`
	Department  string `parquet:"department"`
	Salary      int64  `parquet:"salary"`
	Email       string `parquet:"email"`
	PhoneNumber string `parquet:"phone_number"`
	Address     string `parquet:"address"`
	HireDate    string `parquet:"hire_date"`
}

func createLargeTestFile() error {
	// Create a large test file with many employees
	file, err := os.Create("./data/large_employees.parquet")
	if err != nil {
		return fmt.Errorf("Can't create file: %v", err)
	}
	defer file.Close()

	writer := parquet.NewWriter(file, parquet.SchemaOf(LargeEmployee{}))

	departments := []string{"Engineering", "Sales", "Marketing", "HR", "Finance", "Operations", "Research", "Support"}
	
	// Create 10,000 employees for a larger file
	numEmployees := 10000
	
	fmt.Printf("Creating and writing %d employees to large test file...\n", numEmployees)
	
	for i := 0; i < numEmployees; i++ {
		employee := LargeEmployee{
			ID:          int64(i + 1),
			Name:        fmt.Sprintf("Employee_%d", i+1),
			Department:  departments[i%len(departments)],
			Salary:      int64(40000 + (i%8)*10000 + (i%3)*5000), // Varied salaries
			Email:       fmt.Sprintf("employee_%d@company.com", i+1),
			PhoneNumber: fmt.Sprintf("555-%.4d", 1000+i),
			Address:     fmt.Sprintf("%d Main Street, City %d, State %d", (i%999)+1, (i%50)+1, (i%25)+1),
			HireDate:    fmt.Sprintf("2020-%.2d-%.2d", (i%12)+1, (i%28)+1),
		}
		
		err = writer.Write(employee)
		if err != nil {
			return fmt.Errorf("Write error at employee %d: %v", i+1, err)
		}
		
		if (i+1)%1000 == 0 {
			fmt.Printf("Written %d employees...\n", i+1)
		}
	}

	if err = writer.Close(); err != nil {
		return fmt.Errorf("Close error: %v", err)
	}
	
	// Check file size
	if stat, err := os.Stat("./data/large_employees.parquet"); err == nil {
		fmt.Printf("Created large test file: %d bytes (%.1f KB)\n", stat.Size(), float64(stat.Size())/1024)
	}
	
	return nil
}

func main() {
	if err := createLargeTestFile(); err != nil {
		log.Fatal(err)
	}
	fmt.Println("Large test file created successfully!")
}